From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 16 Jun 2018 13:18:10 -0400
Subject: [PATCH] use system property also for new luck


diff --git a/src/main/java/net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer.java b/src/main/java/net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer.java
index 4f73aae0342ddcefba19e14d5400c960c2acf70c..07b2b1273e719ae379ff521434b35336ac6a0b39 100644
--- a/src/main/java/net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer.java
+++ b/src/main/java/net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer.java
@@ -19,6 +19,7 @@ import net.minecraft.world.level.storage.loot.functions.LootItemFunctions;
 import net.minecraft.world.level.storage.loot.predicates.LootItemCondition;
 
 public abstract class LootPoolSingletonContainer extends LootPoolEntryContainer {
+    public static final boolean USE_NEW_LUCK = Boolean.getBoolean("use-new-luck"); // EMC
     public static final int DEFAULT_WEIGHT = 1;
     public static final int DEFAULT_QUALITY = 0;
     protected final int weight;
@@ -135,7 +136,7 @@ public abstract class LootPoolSingletonContainer extends LootPoolEntryContainer
             // This is vanilla
             float qualityModifer = (float) LootPoolSingletonContainer.this.quality * luck;
             double baseWeight = (LootPoolSingletonContainer.this.weight + qualityModifer);
-            if (io.papermc.paper.configuration.GlobalConfiguration.get().misc.useAlternativeLuckFormula) {
+            if (USE_NEW_LUCK || io.papermc.paper.configuration.GlobalConfiguration.get().misc.useAlternativeLuckFormula) { // EMC
                 // Random boost to avoid losing precision in the final int cast on return
                 final int weightBoost = 100;
                 baseWeight *= weightBoost;
