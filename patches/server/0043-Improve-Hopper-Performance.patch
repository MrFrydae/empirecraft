From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Fri, 29 May 2015 21:58:24 -0400
Subject: [PATCH] Improve Hopper Performance

Only do an item "suck in" action once per second

diff --git a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
index 0b9ab86ecc53bd1c1d7fda53683d82883af8a641..ef11fe11b977283ebe18c83e66d1216391e2e865 100644
--- a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
+++ b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
@@ -14,11 +14,13 @@ import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.MoverType;
 import net.minecraft.world.entity.TraceableEntity;
+import net.minecraft.world.entity.vehicle.MinecartHopper;
 import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.gameevent.GameEvent;
+import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.core.BlockPos;
 import net.minecraft.nbt.CompoundTag;
@@ -231,10 +233,21 @@ public class ItemEntity extends Entity implements TraceableEntity {
                 // CraftBukkit end
                 this.discard(EntityRemoveEvent.Cause.DESPAWN); // CraftBukkit - add Bukkit remove cause
             }
-
+            markHopperCarts(); // EMC
         }
     }
-
+    // EMC start
+    private void markHopperCarts() {
+        if (this.isAlive() && this.onGround && this.age < 20 * 60 && this.age % 20 == 0) {
+            AABB aabb = this.getBoundingBox().inflate(32, 4, 32);
+            for (Entity entity : this.level().getEntities(this, aabb)) {
+                if (entity instanceof MinecartHopper) {
+                    ((MinecartHopper) entity).pickupImmunity = MinecraftServer.currentTick + 200;
+                }
+            }
+        }
+    }
+    // EMC end
     // Spigot start - copied from above
     @Override
     public void inactiveTick() {
@@ -255,6 +268,7 @@ public class ItemEntity extends Entity implements TraceableEntity {
             // CraftBukkit end
             this.discard(EntityRemoveEvent.Cause.DESPAWN); // CraftBukkit - add Bukkit remove cause
         }
+        markHopperCarts(); // EMC
     }
     // Spigot end
 
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java b/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
index 761142374f793a1cd4228936b21a68d7a0458894..7230d268ba3285916138efefb709ead96060f03f 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
@@ -17,6 +17,7 @@ import net.minecraft.world.level.block.state.BlockState;
 
 public class MinecartHopper extends AbstractMinecartContainer implements Hopper {
     private boolean enabled = true;
+    public int pickupImmunity = 0; // EMC
 
     public MinecartHopper(EntityType<? extends MinecartHopper> type, Level world) {
         super(type, world);
@@ -130,5 +131,12 @@ public class MinecartHopper extends AbstractMinecartContainer implements Hopper
         this.activatedImmunityTick = Math.max(this.activatedImmunityTick, net.minecraft.server.MinecraftServer.currentTick + 20);
     }
     // Paper end
+    // EMC start
+    private long tickAttempts = 0;
+    @Override
+    public long getAndIncrementAttemptCounter() {
+        return tickAttempts++;
+    }
+    // EMC stop
 
 }
diff --git a/src/main/java/net/minecraft/world/level/block/entity/Hopper.java b/src/main/java/net/minecraft/world/level/block/entity/Hopper.java
index 25cae6cb4127083cb47966ed7bb58a9a61e4310f..415b7c6e0ab8e6ac9520f270eaa1f12c49fb5cc3 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/Hopper.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/Hopper.java
@@ -14,6 +14,7 @@ public interface Hopper extends Container {
         return SUCK;
     }
 
+    long getAndIncrementAttemptCounter(); // EMC
     double getLevelX();
 
     double getLevelY();
diff --git a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
index 8b92115b9444f9fd77775b3c5adcda295080f9d1..db02ecbbdafad220ec3796aee3d796e1af6cdb31 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
@@ -11,6 +11,7 @@ import net.minecraft.core.Direction;
 import net.minecraft.core.NonNullList;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.chat.Component;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.world.CompoundContainer;
 import net.minecraft.world.Container;
 import net.minecraft.world.ContainerHelper;
@@ -20,6 +21,7 @@ import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntitySelector;
 import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.entity.player.Player;
+import net.minecraft.world.entity.vehicle.MinecartHopper;
 import net.minecraft.world.inventory.AbstractContainerMenu;
 import net.minecraft.world.inventory.HopperMenu;
 import net.minecraft.world.item.ItemStack;
@@ -120,6 +122,21 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
         return ContainerHelper.removeItem(this.getItems(), slot, amount);
     }
 
+    // EMC start
+    private long tickAttempts = 0;
+    @Override
+    public long getAndIncrementAttemptCounter() {
+        return tickAttempts++;
+    }
+    private static boolean shouldSuckin(Hopper hopper) {
+        if (hopper instanceof MinecartHopper && ((MinecartHopper) hopper).pickupImmunity > MinecraftServer.currentTick) {
+            return true;
+        }
+
+        final int hopperId = (int) hopper.getLevelX() + (int) hopper.getLevelY() + (int) hopper.getLevelZ();
+        return (hopper.getAndIncrementAttemptCounter() + hopperId) % 20 == 0;
+    }
+    // EMC end
     @Override
     public void setItem(int slot, ItemStack stack) {
         this.unpackLootTable((Player) null);
@@ -556,7 +573,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
                 return false;
             }
             // Paper end - Perf: Optimize Hoppers
-        } else {
+        } else if (shouldSuckin(hopper)) { // EMC
             Iterator iterator = HopperBlockEntity.getItemsAtAndAbove(world, hopper).iterator();
 
             ItemEntity entityitem;
@@ -571,6 +588,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
 
             return true;
         }
+        return false; // EMC
     }
 
     @io.papermc.paper.annotation.DoNotUse // Paper - method unused as logic is inlined above
